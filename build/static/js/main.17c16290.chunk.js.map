{"version":3,"sources":["components/Form.jsx","components/Results.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","info","setInfo","onChangeHandler","event","target","name","value","style","className","htmlFor","type","onChange","Results","firstName","lastName","email","password","App","useState","confirmPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA4CeA,EA5CF,SAACC,GAAW,IAEdC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QAEPC,EAAkB,SAAAC,GACpBF,EAAQ,2BACDD,GADA,kBAEFG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAI1C,OACI,qBAAKC,MAAO,CACR,MAAS,QACT,OAAU,OACV,aAAc,QAHlB,SAMI,iCACI,sBAAKC,UAAU,aAAf,UACI,uBAAOC,QAAQ,YAAf,wBACA,uBAAOC,KAAK,OAAOC,SAAUT,EAAiBM,UAAU,eAAeH,KAAK,iBAEhF,sBAAKG,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,OAAOC,SAAUT,EAAiBM,UAAU,eAAeH,KAAK,gBAEhF,sBAAKG,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,SAAUT,EAAiBM,UAAU,eAAeH,KAAK,aAEjF,sBAAKG,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,SAAUT,EAAiBM,UAAU,eAAeH,KAAK,gBAEpF,sBAAKG,UAAU,aAAf,UACI,uBAAOC,QAAQ,kBAAf,8BACA,uBAAOC,KAAK,WAAWC,SAAUT,EAAiBM,UAAU,eAAeH,KAAK,6BChBrFO,EAnBC,SAACb,GAAW,IAEjBC,EAAiBD,EAAjBC,KAAiBD,EAAXE,QAEb,OACI,sBAAKM,MAAO,CACR,MAAS,QACT,OAAU,OACV,aAAc,QAHlB,UAMI,8CAAiBP,EAAKa,aACtB,6CAAgBb,EAAKc,YACrB,yCAAYd,EAAKe,SACjB,4CAAef,EAAKgB,gBCMjBC,MAhBf,WAAgB,IAAD,EACWC,mBAAS,CAC/BL,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVG,gBAAiB,KANN,mBACNnB,EADM,KACAC,EADA,KAQb,OACE,sBAAKO,UAAU,MAAf,UACE,cAAC,EAAD,CAAMR,KAAMA,EAAMC,QAASA,IAC3B,cAAC,EAAD,CAASD,KAAMA,EAAMC,QAASA,QCLrBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17c16290.chunk.js","sourcesContent":["const Form = (props) => {\r\n\r\n    const {info, setInfo} = props\r\n\r\n    const onChangeHandler = event => {\r\n        setInfo({\r\n            ...info,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            'width': '500px',\r\n            'margin': 'auto',\r\n            'margin-top': '50px'\r\n\r\n        }}>\r\n            <form> \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" onChange={onChangeHandler} className='form-control' name='firstName'/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" onChange={onChangeHandler} className='form-control' name='lastName'/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" onChange={onChangeHandler} className='form-control' name='email'/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" onChange={onChangeHandler} className='form-control' name='password'/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                    <input type=\"password\" onChange={onChangeHandler} className='form-control' name='confirmPassword'/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Results = (props) => {\r\n\r\n    const {info, setInfo} = props\r\n\r\n    return (\r\n        <div style={{\r\n            'width': '500px',\r\n            'margin': 'auto',\r\n            'margin-top': '50px'\r\n\r\n        }}>\r\n            <h3>First Name: {info.firstName}</h3>\r\n            <h3>Last Name: {info.lastName}</h3>\r\n            <h3>Email: {info.email}</h3>\r\n            <h3>Password: {info.password}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport {useState} from 'react'\n\nimport Form from './components/Form'\nimport Results from './components/Results'\n\nfunction App() {\n  const [info, setInfo] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n})\n  return (\n    <div className=\"App\">\n      <Form info={info} setInfo={setInfo} />\n      <Results info={info} setInfo={setInfo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}